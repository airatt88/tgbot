import telebot
from flask import Flask, request
import requests
import random

# –¢–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = "8000909618:AAH9skOY44FOwjgWBFm9nm91jxf_HvpmIiY"
OPENROUTER_API_KEY = "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"

bot = telebot.TeleBot(TELEGRAM_TOKEN)
app = Flask(__name__)

# GPT-—Ñ—É–Ω–∫—Ü–∏—è
def ask_gpt(prompt):
    try:
        headers = {
            "Authorization": f"Bearer {OPENROUTER_API_KEY}",
            "Content-Type": "application/json",
            "HTTP-Referer": "https://—Ç–≤–æ—ë-–∏–º—è.railway.app"  # –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Railway –¥–æ–º–µ–Ω!
        }
        payload = {
            "model": "openai/gpt-3.5-turbo",
            "messages": [{"role": "user", "content": prompt}]
        }

        response = requests.post(
            "https://openrouter.ai/api/v1/chat/completions",
            headers=headers,
            json=payload
        )

        data = response.json()
        if "choices" not in data:
            return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å AI: {data.get('error', {}).get('message', '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞')}"
        
        return data["choices"][0]["message"]["content"].strip()

    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}"

# –•–µ–Ω–¥–ª–µ—Ä—ã
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Startup House! üöÄ")

@bot.message_handler(commands=['ai'])
def ai(message):
    prompt = message.text.replace("/ai", "").strip()
    if not prompt:
        bot.reply_to(message, "–ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ /ai, –Ω–∞–ø—Ä–∏–º–µ—Ä `/ai –∫–∞–∫ –Ω–∞—á–∞—Ç—å —Å—Ç–∞—Ä—Ç–∞–ø?`")
    else:
        reply = ask_gpt(prompt)
        bot.send_message(message.chat.id, reply)

# Flask –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –≤–µ–±—Ö—É–∫–∞
@app.route(f"/{TELEGRAM_TOKEN}", methods=["POST"])
def receive_update():
    update = telebot.types.Update.de_json(request.stream.read().decode("utf-8"))
    bot.process_new_updates([update])
    return "ok", 200

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–µ–±—Ö—É–∫–∞
@app.route("/set_webhook", methods=["GET"])
def set_webhook():
    webhook_url = f"https://—Ç–≤–æ—ë-–∏–º—è.railway.app/{TELEGRAM_TOKEN}"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Railway URL
    success = bot.set_webhook(url=webhook_url)
    return "Webhook set" if success else "Webhook failed", 200

# –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8000)
