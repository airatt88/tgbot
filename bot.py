
import telebot
import os
import random
import requests

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY")

bot = telebot.TeleBot(TELEGRAM_TOKEN)

def ask_openrouter(prompt):
    try:
        headers = {
            "Authorization": f"Bearer {OPENROUTER_API_KEY}",
            "Content-Type": "application/json",
        }
        payload = {
            "model": "openai/gpt-3.5-turbo",
            "messages": [{"role": "user", "content": prompt}],
        }
        response = requests.post("https://openrouter.ai/api/v1/chat/completions", headers=headers, json=payload)
        return response.json()["choices"][0]["message"]["content"]
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {e}"

@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Startup House! üöÄ")

@bot.message_handler(commands=['ai'])
def ai_chat(message):
    question = message.text.replace('/ai', '').strip()
    if not question:
        bot.reply_to(message, "–ù–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /ai, –Ω–∞–ø—Ä–∏–º–µ—Ä: `/ai –∫–∞–∫ –Ω–∞—á–∞—Ç—å —Å—Ç–∞—Ä—Ç–∞–ø?`")
    else:
        reply = ask_openrouter(question)
        bot.reply_to(message, reply)

@bot.message_handler(commands=['startup_idea'])
def startup_idea(message):
    prompt = "–ü—Ä–∏–¥—É–º–∞–π –∫—Ä–µ–∞—Ç–∏–≤–Ω—É—é –∏–¥–µ—é —Å—Ç–∞—Ä—Ç–∞–ø–∞, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –ò–ò –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏. –û—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ:"
    idea = ask_openrouter(prompt)
    bot.reply_to(message, f"üöÄ –ò–¥–µ—è: {idea}")

@bot.message_handler(commands=['name_gen'])
def name_gen(message):
    names = ["NeuroShift", "AIvatar", "BizMind AI", "InnovaCore", "CogniSpark"]
    name = random.choice(names)
    bot.reply_to(message, f"–ö–∞–∫ —Ç–µ–±–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {name}?")

@bot.message_handler(commands=['mentor'])
def mentor(message):
    tips = [
        "–ù–∞—á–Ω–∏ —Å –ø—Ä–æ–±–ª–µ–º—ã, –∞ –Ω–µ —Å —Ä–µ—à–µ–Ω–∏—è.",
        "–î–µ–ª–∞–π MVP –∏ —Å–æ–±–∏—Ä–∞–π —Ñ–∏–¥–±–µ–∫.",
        "–°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –æ–¥–Ω–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ —Å–Ω–∞—á–∞–ª–∞."
    ]
    tip = random.choice(tips)
    bot.reply_to(message, f"–°–æ–≤–µ—Ç –æ—Ç –º–µ–Ω—Ç–æ—Ä–∞: {tip}")

bot.infinity_polling()
